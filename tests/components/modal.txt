import { mount } from '@vue/test-utils';
import AddressModal from '../../src/components/childcomponents/Modal.vue';

describe('AddressModal', () => {
  it('renders correctly', () => {
    const wrapper = mount(AddressModal, {
      props: {
        cardState: true,
        addressInfo: {
          id: '1',
          name: {
            first: 'John',
            last: 'Doe',
          },
          email: 'john.doe@example.com',
          phone: '1234567890',
        },
      },
    });

    expect(wrapper.exists()).toBe(true);
  });

  it('emits update:cardState event when cancel button is clicked', async () => {
    const wrapper = mount(AddressModal, {
      props: {
        cardState: true,
        addressInfo: {
          id: '1',
          name: {
            first: 'John',
            last: 'Doe',
          },
          email: 'john.doe@example.com',
          phone: '1234567890',
        },
      },
    });

    const cancelButton = wrapper.find('.q-btn[label="Cancel"]');
    await cancelButton.trigger('click');

    expect(wrapper.emitted('update:cardState')).toBeTruthy();
    // expect(wrapper.emitted('update:cardState')[0]).toEqual([false]);
  });

  it('calls saveAddress method when save address button is clicked', async () => {
    const wrapper = mount(AddressModal, {
      props: {
        cardState: true,
        addressInfo: {
          id: '1',
          name: {
            first: 'John',
            last: 'Doe',
          },
          email: 'john.doe@example.com',
          phone: '1234567890',
        },
      },
    });

    const saveButton = wrapper.find('.q-btn[label="Save address"]');
    await saveButton.trigger('click');

    expect(wrapper.vm.saveAddress).toHaveBeenCalled();
  });
});
